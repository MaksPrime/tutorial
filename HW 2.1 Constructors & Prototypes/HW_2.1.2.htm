<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title></title>
    <!-- Создайте функцию конструктор, которая создает объект со свойством экземпляра,
    свойством функции-конструктора, с методом экземпляра и методом функции-конструктора имена выберите произвольно.   -->
</head>
<body> <script type="text/javascript">

function Constr (a, b) {
//Свойства экземпляра:    
    this.a = a;
    this.b = b;
//Метод экземпляра:
    this.sum = function () {return this.a + this.b;}
}

//Свойство функции-конструктора:
    Constr.c = 100;

//Метод функции конструктора:
    Constr.getOrigin = function () {return new Constr(0, 1)} //в этом случае this не используется

    var exemplar = new Constr(10, 20);

document.write(exemplar.a); // выводим свойство "а" экземпляра
document.write('<hr/>');
document.write(exemplar.b); // выводим свойство "b" экземпляра
document.write('<hr/>');
document.write(exemplar.sum()); // выводим результат работы метода экземпляра
document.write('<hr/>');
document.write(Constr.c); // выводим свойство функции-конструктора
document.write('<hr/>');
document.write(exemplar.hasOwnProperty('c')); //проверяем, что последнее свойство не является свойством экземпляра
document.write('<hr/>');
document.write(("c" in exemplar)); // и не является свойством прототипа
document.write('<hr/>');
document.write(Constr.getOrigin().sum());

</script>
</body>
</html>
